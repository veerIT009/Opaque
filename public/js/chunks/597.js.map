{"version":3,"file":"js/chunks/597.js","mappings":";qPAGIA,EAAU,CAEdA,OAAiB,OACjBA,WAAoB,MAEP,IAAI,IAASA,GAIX,sGCXf,aAAAC,GAAA,gEAAAA,GAAA,0JAAAA,EAAA,6FAAAA,GAAA,mIAAAA,IAAA,4SAAAA,IAAA,2OAAAA,EAAA,iBAAAA,EAAA,EAAAA,IAAA,EAAAA,GAAA,EAAAA,GAAA,SAmBA,IAAMC,EAAiB,SAACC,GACpB,IACIC,EASAD,EATAC,gBACAC,EAQAF,EARAE,qBAGAC,GAKAH,EAPAI,+BAOAJ,EANAK,iBAMAL,EALAG,WACAG,EAIAN,EAJAM,iBACAC,EAGAP,EAHAO,YACAC,EAEAR,EAFAQ,wBACAC,EACAT,EADAS,mBAEyC,KAAfC,EAAAA,EAAAA,WAAS,GAAM,GAAtCC,EAAO,KAAEC,EAAU,KAEY,IADrBC,EAAAA,EAAAA,MACqB,GAAVH,EAAAA,EAAAA,YAAU,IAChCI,GADO,KAAW,MACNC,EAAAA,EAAAA,IAAoBC,EAAAA,KAChCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACNb,IACAE,GACJ,GAAG,KAUHW,EAAAA,EAAAA,YAAU,WACNC,YAAW,WAEPlB,GAD8B,IAAZS,EAAoB,EAAI,EAE9C,GAAG,IACP,GAAG,CAACA,IAQJ,IAkBMU,EAAWZ,aAAkB,EAAlBA,EAAoBa,SAC/BC,EAAK,IAAIC,KACTC,EAAK,IAAID,KAAKH,GAEpB,OACI,4BACI,SAACK,EAAA,EAAW,KAEZ,gBAAKC,UAAU,WAAU,UACrB,iBAAKA,UAAU,aAAY,WACvB,iBAAMC,MAAO,CAAEC,OAAQ,SAAU,UAC5BC,EAAAA,EAAAA,IAAoB,oCAEzB,mBAAOH,UAAU,SAAQ,WACrB,kBACII,KAAK,WACLC,GAAG,UACHC,SAAU,SAACC,GAAC,OAnCb,SAACA,GACpB,IAAMC,EAAQD,EAAEE,OAAOC,QACvBzB,EAAWuB,EACf,CAgCyCG,CAAeJ,EAAE,KAEtC,iBAAMP,UAAU,qBAEpB,iBAAMC,MAAO,CAAEC,OAAQ,SAAU,UAC5BC,EAAAA,EAAAA,IAAoB,wCAKjC,gBAAKH,UAAU,gDAA+C,SACzD1B,EAAgBsC,OACbtC,EAAgBuC,aAAaC,KAAI,SAACC,GAAS,QACvC,OA2DI,gBACIf,UAAU,0CAEV,WAAS,UACT,oBAAkB,OAClB,iBAAe,MAAK,UAEpB,iBAAKA,UAAU,wCAAuC,WAClD,eAAIA,UAAU,iBAAgB,SACzBe,EAAKC,QAEV,gBAAIhB,UAAU,sBAAqB,UAC9BpB,EAAYqC,SACPrC,EAAYqC,SACPC,gBACL,IAAK,IACVH,EAAKI,OACN,2BACiB,IAAZnC,EACK,KAAkB,QAAf,EAAGG,EAAU,UAAE,aAAZ,EAAc6B,MACpB,KAAkB,QAAf,EAAG7B,EAAU,UAAE,aAAZ,EAAc6B,YAGlC,eAAIhB,UAAU,gBAAe,SACxBe,EAAKK,aACF,wBAAKL,EAAKK,cAEV,MAGR,mBACIC,QAAS,SAACd,GArIzB,IAACF,IAsI+BU,EAAKV,GApItDf,EAAS,2BAAD,OAA4Be,GAqIJ,EACAL,UAAS,4BACLlB,SAAAA,EAAoBwC,QACpBP,EAAKV,GACC,KAGVkB,SAAU3B,EAAG4B,UAAY1B,EAAG0B,UAAU,UAEtC,2BACK1C,aAAkB,EAAlBA,EAAoBwC,WACrBP,EAAKV,GACC,UACAF,EAAAA,EAAAA,IACI,2CA7CjBY,EAAKV,GAoDtB,KAEA,iBAAKL,UAAU,aAAY,UACrBxB,GAGE,cAAGwB,UAAU,yBAFb,cAAGA,UAAU,0BAIfxB,IACE,iBAAMwB,UAAU,yBAAwB,UACpC,eAAIA,UAAU,OAAM,UACfG,EAAAA,EAAAA,IACG,kDAUxC,EAEA/B,EAAeqD,UAAY,CACvBnD,gBAAiBoD,IAAAA,MACjBhD,iBAAkBgD,IAAAA,QAGtB,IAiBA,GAAeC,EAAAA,EAAAA,KAjBS,SAACC,GAQrB,MAAO,CACHtD,gBAFAsD,EALAtD,gBAQAI,iBAHAkD,EAJAlD,iBAQAF,UAJAoD,EAHApD,UAQAI,YALAgD,EAFAhD,YAQAE,mBANA8C,EADA9C,mBASR,GAEwC,CACpCP,qBAAAA,EAAAA,EACAE,+BAAAA,EAAAA,EACAE,iBAAAA,EAAAA,EACAE,wBAAAA,EAAAA,GAJJ,CAKGT,GC1QGyD,EAAa,SAACxD,GAEhB,OAD4BA,EAApBC,iBAQJ,gBAAK0B,UAAU,kBAAiB,UAkB5B,oBAASK,GAAG,UAAUL,UAAU,0BAAyB,UACrD,iBAAKA,UAAU,YAAW,WACtB,iBAAKA,UAAU,mCAAkC,WAC7C,0BAAM,aAEN,eAAIA,UAAU,YAAW,SAAC,oCAE1B,gBAAKA,UAAU,yCAKnB,SAAC,EAAc,YApCpB,SAACD,EAAA,EAAW,GA0C3B,EAEA8B,EAAWJ,UAAY,CACnBK,QAASJ,IAAAA,OACTnD,qBAAsBmD,IAAAA,MAG1B,IAKA,GAAeC,EAAAA,EAAAA,KALS,SAACC,GAErB,MAAO,CAAEtD,gBADmBsD,EAApBtD,gBAEZ,GAEwC,KAAxC,CAA8CuD,6WClE9C,8lGAAA1D,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,+XAOO,IAAMM,EACT,SAAC6C,EAAShC,GAAQ,sBARtB,EAQsB,GARtB,EAQsB,UAAK,WAAOyC,GAAQ,iEACP,OAA3BA,GAASC,EAAAA,EAAAA,IAAW,IAAO,SACrBC,EAAAA,EAAAA,KACIC,EAAAA,GAAAA,kCAA+C,IAAH,OAAOZ,IACxDa,MAAK,SAACC,GACCA,IACAC,aAAaC,QACT,SACAC,KAAKC,KAAKC,UAAUL,EAASM,KAAKC,QAAQC,QAE9Cb,EAAS,CACL3B,KAAMyC,EAAAA,GAAAA,iBACNC,QAASV,EAASM,KAAKC,QAAQI,YAEnChB,GACIiB,EAAAA,EAAAA,IAAS,CACLC,KAAM,uCAGdlB,GAASC,EAAAA,EAAAA,IAAW,IACpB1C,EAAS,KAEjB,IAAE,OACK,YAAkB,IAAf8C,EAAQ,EAARA,SACFA,GACAL,GACIiB,EAAAA,EAAAA,IAAS,CACLC,KAAMb,EAASM,KAAKC,QACpBvC,KAAM8C,EAAAA,GAAAA,SAIlBnB,GAASC,EAAAA,EAAAA,IAAW,GACxB,IAAE,0CAzCd,+KA0CK,mDAlCiB,EAkCjB,0VC1CL,8lGAAA7D,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,+XAKO,IAAMQ,EAAmB,WAAH,sBAL7B,EAK6B,GAL7B,EAK6B,UAAS,WAAOoD,GAAQ,iFAC3CE,EAAAA,EAAAA,IAAcC,EAAAA,GAAAA,cACfC,MAAK,SAACC,GACHL,EAAS,CAAE3B,KAAM+C,EAAAA,GAAAA,mBAAsCL,QAASV,EAASM,KAAKA,MAClF,IAAE,OACK,YAAkB,IAAfN,EAAQ,EAARA,SACNL,GAASiB,EAAAA,EAAAA,IAAS,CAAEC,KAAMb,EAASM,KAAKC,QAASvC,KAAM8C,EAAAA,GAAAA,QAC3D,IAAE,0CAZV,+KAaC,mDAR4B,EAQ5B,uVCbD,8lGAAA/E,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,+XAKO,IAAMU,EAA0B,WAAH,sBALpC,EAKoC,GALpC,EAKoC,UAAS,WAAOkD,GAAQ,iEAC7B,OAA3BA,GAASC,EAAAA,EAAAA,IAAW,IAAO,SACrBC,EAAAA,EAAAA,IAAc,sBACfE,MAAK,SAACC,GACHL,EAAS,CAAE3B,KAAMgD,EAAAA,GAAAA,gCAA0DN,QAASV,EAASM,KAAKA,OAClGX,GAASC,EAAAA,EAAAA,IAAW,GACxB,IAAE,OACK,YAAkB,IAAfI,EAAQ,EAARA,SACNL,GAASiB,EAAAA,EAAAA,IAAS,CAAEC,KAAMb,EAASM,KAAKC,QAASvC,KAAM8C,EAAAA,GAAAA,SACvDnB,GAASC,EAAAA,EAAAA,IAAW,GACxB,IAAE,0CAfV,+KAgBC,mDAXmC,EAWnC,mWChBD,8lGAAA7D,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,+XAMO,IAAMI,EAAuB,SAACY,EAAWkE,GAAM,sBANtD,EAMsD,GANtD,EAMsD,UAAK,WAAOtB,GAAQ,iEAC3C,OAA3BA,GAASC,EAAAA,EAAAA,IAAW,IAAO,SACrBC,EAAAA,EAAAA,IAAcC,EAAAA,GAAAA,YAAyB,GAAH,OAAM/C,EAAY,cAAgBA,EAAY,IAAO,GAAH,OAAMkE,EAAS,OAASA,EAAS,KACxHlB,MAAK,SAACC,GACHL,EAAS,CAAE3B,KAAMyC,EAAAA,GAAAA,uBAAiDC,QAASV,EAASM,KAAKA,OACzFX,GAASC,EAAAA,EAAAA,IAAW,GACxB,IAAE,OACK,YAAkB,IAAfI,EAAQ,EAARA,SACNL,GAASiB,EAAAA,EAAAA,IAAS,CAAEC,KAAMb,EAASM,KAAKC,QAASvC,KAAM8C,EAAAA,GAAAA,SACvDnB,GAASC,EAAAA,EAAAA,IAAW,GACxB,IAAE,0CAhBV,+KAiBC,mDAXqD,EAWrD,2DCfGsB,QAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOnD,GAAI,2vFAA8vF,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,8EAA8E,MAAQ,GAAG,SAAW,g6CAAg6C,eAAiB,CAAC,41IAA81I,WAAa,MAEnsR","sources":["webpack:///./resources/pos/src/member/components/memberplan/MemberPlan.scss?e618","webpack:///./resources/pos/src/member/components/memberplan/MemberPlanForm.js","webpack:///./resources/pos/src/member/components/memberplan/MemberPlan.js","webpack:///./resources/pos/src/member/store/actions/MembershipPaymentAction.js","webpack:///./resources/pos/src/member/store/actions/allSettingsAction.js","webpack:///./resources/pos/src/member/store/actions/currentPlanAction.js","webpack:///./resources/pos/src/member/store/actions/membershipPlanAction.js","webpack:///./resources/pos/src/member/components/memberplan/MemberPlan.scss"],"sourcesContent":["import api from \"!../../../../../../node_modules/laravel-mix/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].oneOf[1].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[7].oneOf[1].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[7].oneOf[1].use[3]!./MemberPlan.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./MemberPlan.scss\";\r\nimport { fetchMembershipPlans } from \"../../store/actions/membershipPlanAction\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { createMembershipPaymentSession } from \"../../store/actions/MembershipPaymentAction\";\r\nimport {\r\n    getFormattedMessage,\r\n    getFormattedOptions,\r\n} from \"../../../shared/sharedMethod\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { setLoading } from \"../../../store/action/progressBarAction\";\r\nimport ProgressBar from \"../../../shared/progress-bar/ProgressBar\";\r\nimport { fetchAllSettings } from \"../../store/actions/allSettingsAction\";\r\nimport { fetchCurrentPlanDetails } from \"../../store/actions/currentPlanAction\";\r\nimport { membershipPlanFrequencyOptions } from \"../../constants\";\r\nimport { Routes } from \"../../constants/index\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst MemberPlanForm = (props) => {\r\n    const {\r\n        membershipPlans,\r\n        fetchMembershipPlans,\r\n        createMembershipPaymentSession,\r\n        paymentSessionId,\r\n        isLoading,\r\n        fetchAllSettings,\r\n        allSettings,\r\n        fetchCurrentPlanDetails,\r\n        currentPlanDetails,\r\n    } = props;\r\n    const [monthly, setMonthly] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const [pubKey, setPubKey] = useState();\r\n    const frequency = getFormattedOptions(membershipPlanFrequencyOptions);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        fetchAllSettings();\r\n        fetchCurrentPlanDetails();\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     if (allSettings) {\r\n    //         setPubKey(\r\n    //             allSettings.stripe_key ? allSettings.stripe_key.value : null\r\n    //         );\r\n    //     }\r\n    // }, [allSettings]);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            const frequency = monthly === false ? 1 : 2;\r\n            fetchMembershipPlans(frequency);\r\n        }, 2000);\r\n    }, [monthly]);\r\n\r\n    // useEffect(() => {\r\n    //     if (paymentSessionId) {\r\n    //         callToStripe(pubKey);\r\n    //     }\r\n    // }, [paymentSessionId]);\r\n\r\n    const onSwitchChange = (e) => {\r\n        const value = e.target.checked;\r\n        setMonthly(value);\r\n    };\r\n\r\n    const clickOnTryIt = (id) => {\r\n        // createMembershipPaymentSession(id, navigate);\r\n        navigate(`/lms/member-plan/method/${id}`);\r\n    };\r\n\r\n    const callToStripe = async (pubKey) => {\r\n        const stripe = await loadStripe(`${pubKey}`);\r\n        const { err } = await stripe.redirectToCheckout({\r\n            sessionId: paymentSessionId,\r\n        });\r\n        dispatch(setLoading(false));\r\n    };\r\n\r\n    const planDate = currentPlanDetails?.end_date;\r\n    const d1 = new Date();\r\n    const d2 = new Date(planDate);\r\n\r\n    return (\r\n        <div>\r\n            <ProgressBar />\r\n\r\n            <div className=\"top mb-4\">\r\n                <div className=\"toggle-btn\">\r\n                    <span style={{ margin: \"0.8em\" }}>\r\n                        {getFormattedMessage(\"membership-plan.monthly.title\")}\r\n                    </span>\r\n                    <label className=\"switch\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"checbox\"\r\n                            onChange={(e) => onSwitchChange(e)}\r\n                        />\r\n                        <span className=\"slider round\" />\r\n                    </label>\r\n                    <span style={{ margin: \"0.8em\" }}>\r\n                        {getFormattedMessage(\"membership-plan.yearly.title\")}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row align-items-center justify-content-center\">\r\n                {membershipPlans.length ? (\r\n                    membershipPlans.toReversed().map((plan) => {\r\n                        return (\r\n                            // <Col\r\n                            //     xs={12}\r\n                            //     xl={3}\r\n                            //     md={6}\r\n                            //     lg={6}\r\n                            //     className=\"pricing-card\"\r\n                            //     key={plan.id}\r\n                            // >\r\n                            //     <h3 className=\"pricing-card-header\">\r\n                            //         {plan.name}\r\n                            //     </h3>\r\n                            //     <div className=\"price\">\r\n                            //         <span className=\"price-span\">\r\n                            //             {allSettings.currency\r\n                            //                 ? allSettings.currency\r\n                            //                       .currency_symbol\r\n                            //                 : \"$\"}\r\n                            //         </span>\r\n                            //         {plan.price}\r\n                            //         <span className=\"year\">\r\n                            //             {monthly === true\r\n                            //                 ? \"/\" + frequency[1]?.name\r\n                            //                 : \"/\" + frequency[0]?.name}\r\n                            //         </span>\r\n                            //     </div>\r\n                            //     <div className=\"plan-des\">\r\n                            //         <ul className=\"text-left text-white \">\r\n                            //             {plan.description ? (\r\n                            //                 <li>\r\n                            //                     <span className=\"mr-3\">\r\n                            //                         <i className=\"fas fa-check\" />\r\n                            //                     </span>\r\n                            //                     {plan.description}\r\n                            //                 </li>\r\n                            //             ) : (\r\n                            //                 \"\"\r\n                            //             )}\r\n                            //         </ul>\r\n                            //     </div>\r\n                            //     <button\r\n                            //         onClick={(e) => {\r\n                            //             clickOnTryIt(plan.id);\r\n                            //         }}\r\n                            //         className={`${\r\n                            //             currentPlanDetails?.plan_id === plan.id\r\n                            //                 ? \"active-btn\"\r\n                            //                 : \"order-btn\"\r\n                            //         }`}\r\n                            //         disabled={d1.getTime() < d2.getTime()}\r\n                            //     >\r\n                            //         {currentPlanDetails?.plan_id === plan.id\r\n                            //             ? \"Active\"\r\n                            //             : getFormattedMessage(\r\n                            //                   \"membership-plan.choose-it.title\"\r\n                            //               )}\r\n                            //     </button>\r\n                            // </Col>\r\n\r\n                            <div\r\n                                className=\"col-md-6 col-lg-4 mb-4 mb-lg-0 aos-init\"\r\n                                key={plan.id}\r\n                                data-aos=\"fade-up\"\r\n                                data-aos-duration=\"1000\"\r\n                                data-aos-delay=\"150\"\r\n                            >\r\n                                <div className=\"pricing__item translateEffect1 active\">\r\n                                    <h3 className=\"pricing__title\">\r\n                                        {plan.name}\r\n                                    </h3>\r\n                                    <h3 className=\"pricing__price test\">\r\n                                        {allSettings.currency\r\n                                            ? allSettings.currency\r\n                                                  .currency_symbol\r\n                                            : \"$\"}{\" \"}\r\n                                        {plan.price}\r\n                                        <span>\r\n                                            {monthly === true\r\n                                                ? \"/\" + frequency[1]?.name\r\n                                                : \"/\" + frequency[0]?.name}\r\n                                        </span>\r\n                                    </h3>\r\n                                    <ul className=\"pricing__list\">\r\n                                        {plan.description ? (\r\n                                            <li>{plan.description}</li>\r\n                                        ) : (\r\n                                            \"\"\r\n                                        )}\r\n                                    </ul>\r\n                                    <button\r\n                                        onClick={(e) => {\r\n                                            clickOnTryIt(plan.id);\r\n                                        }}\r\n                                        className={`btn frontend-btn ${\r\n                                            currentPlanDetails?.plan_id ===\r\n                                            plan.id\r\n                                                ? \"\"\r\n                                                : \"\"\r\n                                        }`}\r\n                                        disabled={d1.getTime() < d2.getTime()}\r\n                                    >\r\n                                        <span>\r\n                                            {currentPlanDetails?.plan_id ===\r\n                                            plan.id\r\n                                                ? \"Active\"\r\n                                                : getFormattedMessage(\r\n                                                      \"membership-plan.choose-it.title\"\r\n                                                  )}\r\n                                        </span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })\r\n                ) : (\r\n                    <div className=\"empty-plan\">\r\n                        {!isLoading ? (\r\n                            <i className=\"fa fa-2x fa-ban mb-2\" />\r\n                        ) : (\r\n                            <i className=\"fa fa-2x fa-spinner\" />\r\n                        )}\r\n                        {!isLoading && (\r\n                            <span className=\"empty-component__title\">\r\n                                <h5 className=\"ms-1\">\r\n                                    {getFormattedMessage(\r\n                                        \"membership-plan-not-available-title\"\r\n                                    )}\r\n                                </h5>\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nMemberPlanForm.propTypes = {\r\n    membershipPlans: PropTypes.array,\r\n    paymentSessionId: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {\r\n        membershipPlans,\r\n        paymentSessionId,\r\n        isLoading,\r\n        allSettings,\r\n        currentPlanDetails,\r\n    } = state;\r\n    return {\r\n        membershipPlans,\r\n        paymentSessionId,\r\n        isLoading,\r\n        allSettings,\r\n        currentPlanDetails,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    fetchMembershipPlans,\r\n    createMembershipPaymentSession,\r\n    fetchAllSettings,\r\n    fetchCurrentPlanDetails,\r\n})(MemberPlanForm);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row, Col, Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport ProgressBar from '../../../shared/progress-bar/ProgressBar';\r\nimport HeaderTitle from \"../../../shared/header-title/HeaderTitle\";\r\nimport { getFormattedMessage } from \"../../../shared/sharedMethod\";\r\nimport MemberPlanForm from \"./MemberPlanForm\";\r\n\r\n\r\nconst MemberPlan = (props) => {\r\n    const { membershipPlans } = props\r\n    if (!membershipPlans) {\r\n        return <ProgressBar />;\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"animated fadeIn\">\r\n            {/* <HeaderTitle title=\"Membership Plan\" />\r\n            <Row>\r\n                <Col sm={12} className=\"mb-2 d-flex justify-content-between\">\r\n                    <h5 className=\"pull-left text-dark\">{getFormattedMessage(\"membership-plan.title\")}</h5>\r\n                </Col>\r\n                <Col sm={12}>\r\n                    <div className=\"sticky-table-container\">\r\n                        <Card>\r\n                            <CardBody>\r\n                                <div className=\"w-100\">\r\n                                    <MemberPlanForm />\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </Col>\r\n            </Row> */}\r\n            <section id=\"pricing\" className=\"section-padding pricing\">\r\n                <div className=\"container\">\r\n                    <div className=\"section-title-center text-center\">\r\n                        <span>\r\n                            PRICING</span>\r\n                        <h2 className=\"display-6\">\r\n                            Pricing based on their version</h2>\r\n                        <div className=\"section-divider divider-traingle\">\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <MemberPlanForm />\r\n\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n};\r\n\r\nMemberPlan.propTypes = {\r\n    history: PropTypes.object,\r\n    fetchMembershipPlans: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { membershipPlans } = state;\r\n    return { membershipPlans }\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(MemberPlan);\r\n","import { membershipPlanActionType } from \"../../constants\";\r\nimport apiConfig from \"../../config/apiConfig\";\r\nimport { setLoading } from \"../../../store/action/progressBarAction\";\r\nimport { addToast } from \"../../../store/action/toastAction\";\r\nimport { toastType } from \"../../constants\";\r\nimport { apiBaseURL } from \"../../../constants\";\r\nimport { setUserProfile } from \"../../../store/action/localStorageAction\";\r\n\r\nexport const createMembershipPaymentSession =\r\n    (plan_id, navigate) => async (dispatch) => {\r\n        dispatch(setLoading(true));\r\n        await apiConfig\r\n            .post(apiBaseURL.CREATE_MEMBERSHIP_PAYMENT_SESSION + `/${plan_id}`)\r\n            .then((response) => {\r\n                if (response) {\r\n                    localStorage.setItem(\r\n                        \"member\",\r\n                        btoa(JSON.stringify(response.data.message.user))\r\n                    );\r\n                    dispatch({\r\n                        type: membershipPlanActionType.FETCH_SESSION_ID,\r\n                        payload: response.data.message.sessionId,\r\n                    });\r\n                    dispatch(\r\n                        addToast({\r\n                            text: \"Subscription Created Successfully\",\r\n                        })\r\n                    );\r\n                    dispatch(setLoading(false));\r\n                    navigate(\"/\");\r\n                }\r\n            })\r\n            .catch(({ response }) => {\r\n                if (response) {\r\n                    dispatch(\r\n                        addToast({\r\n                            text: response.data.message,\r\n                            type: toastType.ERROR,\r\n                        })\r\n                    );\r\n                }\r\n                dispatch(setLoading(false));\r\n            });\r\n    };\r\n","import {settingActionType} from '../../constants';\r\nimport apiConfig from '../../config/apiConfig';\r\nimport {addToast} from '../../../store/action/toastAction';\r\nimport {toastType} from '../../constants';\r\nimport {apiBaseURL} from \"../../../constants\";\r\n\r\nexport const fetchAllSettings = () => async (dispatch) => {\r\n    await apiConfig.get(apiBaseURL.ALL_SETTINGS)\r\n        .then((response) => {\r\n            dispatch({ type: settingActionType.FETCH_ALL_SETTINGS, payload: response.data.data });\r\n        })\r\n        .catch(({ response }) => {\r\n            dispatch(addToast({ text: response.data.message, type: toastType.ERROR }));\r\n        });\r\n};\r\n","import {currentMembershipDetails, memberActionType} from '../../constants';\r\nimport apiConfig from '../../config/apiConfig';\r\nimport {setLoading} from '../../../store/action/progressBarAction';\r\nimport {addToast} from '../../../store/action/toastAction';\r\nimport {toastType} from '../../constants';\r\n\r\nexport const fetchCurrentPlanDetails = () => async (dispatch) => {\r\n    dispatch(setLoading(true));\r\n    await apiConfig.get(`membership-details`)\r\n        .then((response) => {\r\n            dispatch({ type: currentMembershipDetails.FETCH_CURRENT_MEMBERSHIPDETAILS, payload: response.data.data });\r\n            dispatch(setLoading(false));\r\n        })\r\n        .catch(({ response }) => {\r\n            dispatch(addToast({ text: response.data.message, type: toastType.ERROR }));\r\n            dispatch(setLoading(false));\r\n        });\r\n};\r\n","import {membershipPlanActionType} from '../../constants';\r\nimport apiConfig from '../../config/apiConfig';\r\nimport {setLoading} from '../../../store/action/progressBarAction';\r\nimport {addToast} from '../../../store/action/toastAction';\r\nimport {toastType} from '../../constants';\r\nimport {apiBaseURL} from \"../../../constants\";\r\n\r\nexport const fetchMembershipPlans = (frequency, planId) => async (dispatch) => {\r\n    dispatch(setLoading(true));\r\n    await apiConfig.get(apiBaseURL.MEMBER_PLAN + `${frequency ? \"?frequency=\" + frequency : \"\"}` + `${planId ? \"?id=\" + planId : \"\"}`)\r\n        .then((response) => {\r\n            dispatch({ type: membershipPlanActionType.FETCH_MEMBERSHIP_PLANS, payload: response.data.data });\r\n            dispatch(setLoading(false));\r\n        })\r\n        .catch(({ response }) => {\r\n            dispatch(addToast({ text: response.data.message, type: toastType.ERROR }));\r\n            dispatch(setLoading(false));\r\n        });\r\n};\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".top{align-items:center;display:flex;flex-direction:column}.button{border-radius:50px;color:#f4f4f4;font-size:1.4em;margin:15px;padding:10px 30px;text-decoration:none;transition:all .3s ease 0s}.button:hover{-webkit-transform:scale(1.2);transform:scale(1.2)}.button1{background-color:#0c9;box-shadow:inset 0 0 10px 0 #0c9,0 0 20px 2px #0c9}.button2{background-color:#ff007c;box-shadow:inset 0 0 10px 0 #ff007c,0 0 20px 2px #ff007c}.button3{background-color:#ffae42;box-shadow:inset 0 0 10px 0 #ffae42,0 0 20px 2px #ffae42}.switch{display:inline-block;height:34px;position:relative;width:60px}.switch input{height:0;opacity:0;width:0}.slider{background-color:#00c6ff;bottom:0;cursor:pointer;left:0;position:absolute;right:0;top:0;-webkit-transform:translate(0);transform:translate(0);-webkit-transition:.4s;transition:transform .6s ease,box-shadow .6s}.slider:before{background-color:#fff;bottom:4px;content:\\\"\\\";height:26px;left:4px;position:absolute;transition:.4s;width:26px}input:checked+.slider{background-color:#00c6ff}input:focus+.slider{box-shadow:0 0 1px #50bfe6}input:checked+.slider:before{-webkit-transform:translateX(26px);transform:translateX(26px)}.slider.round{border-radius:34px}.slider.round:before{border-radius:50%}.package-container{align-items:center;display:flex;flex-wrap:wrap;justify-content:center}.pricing-table{display:flex;flex-wrap:wrap;justify-content:space-around;margin:auto;width:min(1600px,100%)}.pricing-card{background-color:#00c6ff;border-radius:8px;box-shadow:0 19px 38px rgba(0,0,0,.1),0 15px 12px rgba(0,0,0,.05);color:#2d2d2d;cursor:pointer;margin:20px 10px;overflow:hidden;text-align:center}.pricing-card-header{background-color:#fff;border-radius:0 0 20px 20px;color:#0fbcf9;display:inline-block;font-size:16px;font-weight:600;padding:12px 30px;text-transform:uppercase}.price{color:#fff;font-size:65px;font-weight:500;margin:40px 0}.price-span{font-size:65px;font-weight:400}.year{font-size:30px;font-weight:400}.pricing-card:hover,.pricing-card:hover .price{color:#fff}.pricing-card li{font-size:16px;padding:10px 0;text-transform:uppercase}.order-btn{background:#fff;border:2px solid #fff;border-radius:8px;color:#0fbcf9;display:inline-block;font-weight:500;margin-bottom:40px;margin-top:80px;min-height:50px;min-width:201px;text-transform:uppercase;transition:.3s linear}.order-btn:disabled,.order-btn:hover{background-color:#0fbcf9;color:#fff}.order-btn:disabled{opacity:.7}.active-btn{background:#0fbcf9!important;border:2px solid #fff;border-radius:8px;color:#fff!important;display:inline-block;font-weight:500;margin-bottom:40px;margin-top:80px;min-height:50px;min-width:201px;text-transform:uppercase;transition:.3s linear}ul{list-style:none}.empty-plan{align-items:center;display:flex;height:50vh;justify-content:center;width:50%}.plan-des{min-height:100px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/pos/src/member/components/memberplan/MemberPlan.scss\"],\"names\":[],\"mappings\":\"AACA,KAGI,kBAAA,CAFA,YAAA,CACA,qBACJ,CAGA,QAKI,kBAAA,CACA,aAAA,CAHA,eAAA,CACA,WAAA,CAHA,iBAAA,CACA,oBAAA,CAKA,0BAAJ,CAGA,cACI,4BAAA,CAAA,oBAAJ,CAGA,SACI,qBAAA,CACA,kDAAJ,CAGA,SACI,wBAAA,CACA,wDAAJ,CAGA,SACI,wBAAA,CACA,wDAAJ,CAGA,QAEI,oBAAA,CAEA,WAAA,CAHA,iBAAA,CAEA,UACJ,CAGA,cAGI,QAAA,CAFA,SAAA,CACA,OACJ,CAGA,QAOI,wBAAA,CADA,QAAA,CAJA,cAAA,CAEA,MAAA,CAHA,iBAAA,CAIA,OAAA,CAFA,KAAA,CAMA,8BAAA,CAAA,sBAAA,CADA,sBAAA,CAEA,4CAAJ,CAGA,eAOI,qBAAA,CADA,UAAA,CAJA,UAAA,CACA,WAAA,CAEA,QAAA,CAJA,iBAAA,CAQA,cAAA,CALA,UAKJ,CAGA,sBACI,wBAAJ,CAGA,oBACI,0BAAJ,CAGA,6BACI,kCAAA,CAEA,0BAAJ,CAGA,cACI,kBAAJ,CAGA,qBACI,iBAAJ,CAGA,mBAEI,kBAAA,CADA,YAAA,CAGA,cAAA,CADA,sBACJ,CAGA,eACI,YAAA,CACA,cAAA,CACA,4BAAA,CAEA,WAAA,CADA,sBACJ,CAGA,cACI,wBAAA,CAMA,iBAAA,CACA,iEAAA,CAFA,aAAA,CAFA,cAAA,CAFA,gBAAA,CAGA,eAAA,CAFA,iBAKJ,CAGA,qBACI,qBAAA,CAIA,2BAAA,CAFA,aAAA,CADA,oBAAA,CAIA,cAAA,CAEA,eAAA,CAJA,iBAAA,CAGA,wBACJ,CAGA,OAEI,UAAA,CADA,cAAA,CAGA,eAAA,CADA,aACJ,CAGA,YACI,cAAA,CACA,eAAJ,CAGA,MACI,cAAA,CACA,eAAJ,CAGA,+CACI,UAAJ,CAGA,iBACI,cAAA,CACA,cAAA,CACA,wBAAJ,CAGA,WAKI,eAAA,CADA,qBAAA,CAKA,iBAAA,CAHA,aAAA,CALA,oBAAA,CAUA,eAAA,CATA,kBAAA,CACA,eAAA,CAKA,eAAA,CADA,eAAA,CAGA,wBAAA,CAEA,qBAAJ,CAQA,qCAJI,wBAAA,CACA,UAMJ,CAHA,oBAGI,UAAJ,CAKA,YAKI,4BAAA,CADA,qBAAA,CAKA,iBAAA,CAHA,oBAAA,CALA,oBAAA,CAUA,eAAA,CATA,kBAAA,CACA,eAAA,CAKA,eAAA,CADA,eAAA,CAGA,wBAAA,CAEA,qBAFJ,CAKA,GACI,eAFJ,CAKA,YAKI,kBAAA,CAJA,YAAA,CAGA,WAAA,CAFA,sBAAA,CACA,SAAJ,CAKA,UACI,gBAFJ\",\"sourcesContent\":[\"\\r\\n.top {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.button {\\r\\n    padding: 10px 30px;\\r\\n    text-decoration: none;\\r\\n    font-size: 1.4em;\\r\\n    margin: 15px 15px;\\r\\n    border-radius: 50px;\\r\\n    color: #f4f4f4;\\r\\n    transition: all 0.3s ease 0s;\\r\\n}\\r\\n\\r\\n.button:hover {\\r\\n    transform: scale(1.2);\\r\\n}\\r\\n\\r\\n.button1 {\\r\\n    background-color: #00cc99;\\r\\n    box-shadow: 0 0 10px 0 #00cc99 inset, 0 0 20px 2px #00cc99;\\r\\n}\\r\\n\\r\\n.button2 {\\r\\n    background-color: #ff007c;\\r\\n    box-shadow: 0 0 10px 0 #ff007c inset, 0 0 20px 2px #ff007c;\\r\\n}\\r\\n\\r\\n.button3 {\\r\\n    background-color: #ffae42;\\r\\n    box-shadow: 0 0 10px 0 #ffae42 inset, 0 0 20px 2px #ffae42;\\r\\n}\\r\\n\\r\\n.switch {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    width: 60px;\\r\\n    height: 34px;\\r\\n}\\r\\n\\r\\n.switch input {\\r\\n    opacity: 0;\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n}\\r\\n\\r\\n.slider {\\r\\n    position: absolute;\\r\\n    cursor: pointer;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    background-color: #00C6FF;\\r\\n    -webkit-transition: 0.4s;\\r\\n    transform: translate(0px, 0px);\\r\\n    transition: 0.6s ease transform, 0.6s box-shadow;\\r\\n}\\r\\n\\r\\n.slider:before {\\r\\n    position: absolute;\\r\\n    content: \\\"\\\";\\r\\n    height: 26px;\\r\\n    width: 26px;\\r\\n    left: 4px;\\r\\n    bottom: 4px;\\r\\n    background-color: white;\\r\\n    -webkit-transition: 0.4s;\\r\\n    transition: 0.4s;\\r\\n}\\r\\n\\r\\ninput:checked + .slider {\\r\\n    background-color: #00C6FF;\\r\\n}\\r\\n\\r\\ninput:focus + .slider {\\r\\n    box-shadow: 0 0 1px #50bfe6;\\r\\n}\\r\\n\\r\\ninput:checked + .slider:before {\\r\\n    -webkit-transform: translateX(26px);\\r\\n    -ms-transform: translateX(26px);\\r\\n    transform: translateX(26px);\\r\\n}\\r\\n\\r\\n.slider.round {\\r\\n    border-radius: 34px;\\r\\n}\\r\\n\\r\\n.slider.round:before {\\r\\n    border-radius: 50%;\\r\\n}\\r\\n\\r\\n.package-container {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.pricing-table {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    justify-content: space-around;\\r\\n    width: min(1600px, 100%);\\r\\n    margin: auto;\\r\\n}\\r\\n\\r\\n.pricing-card {\\r\\n    background-color: #00C6FF;\\r\\n    margin: 20px 10px;\\r\\n    text-align: center;\\r\\n    cursor: pointer;\\r\\n    overflow: hidden;\\r\\n    color: #2d2d2d;\\r\\n    border-radius: 8px;\\r\\n    box-shadow: 0 19px 38px rgba(0, 0, 0, 0.10), 0 15px 12px rgba(0, 0, 0, 0.05)\\r\\n}\\r\\n\\r\\n.pricing-card-header {\\r\\n    background-color: #ffffff;\\r\\n    display: inline-block;\\r\\n    color: #0fbcf9;\\r\\n    padding: 12px 30px;\\r\\n    border-radius: 0 0 20px 20px;\\r\\n    font-size: 16px;\\r\\n    text-transform: uppercase;\\r\\n    font-weight: 600;\\r\\n}\\r\\n\\r\\n.price {\\r\\n    font-size: 65px;\\r\\n    color: #ffffff;\\r\\n    margin: 40px 0;\\r\\n    font-weight: 500;\\r\\n}\\r\\n\\r\\n.price-span {\\r\\n    font-size: 65px;\\r\\n    font-weight: normal;\\r\\n}\\r\\n\\r\\n.year {\\r\\n    font-size: 30px;\\r\\n    font-weight: normal;\\r\\n}\\r\\n\\r\\n.pricing-card:hover, .pricing-card:hover .price {\\r\\n    color: #fff;\\r\\n}\\r\\n\\r\\n.pricing-card li {\\r\\n    font-size: 16px;\\r\\n    padding: 10px 0;\\r\\n    text-transform: uppercase;\\r\\n}\\r\\n\\r\\n.order-btn {\\r\\n    display: inline-block;\\r\\n    margin-bottom: 40px;\\r\\n    margin-top: 80px;\\r\\n    border: 2px solid #FFFFFF;\\r\\n    background: #FFFFFF;\\r\\n    color: #0fbcf9;\\r\\n    min-width: 201px;\\r\\n    min-height: 50px;\\r\\n    border-radius: 8px;\\r\\n    text-transform: uppercase;\\r\\n    font-weight: 500;\\r\\n    transition: .3s linear;\\r\\n}\\r\\n\\r\\n.order-btn:hover {\\r\\n    background-color: #0fbcf9;\\r\\n    color: #fff;\\r\\n}\\r\\n\\r\\n.order-btn:disabled {\\r\\n    background-color: #0fbcf9;\\r\\n    color: #fff;\\r\\n    opacity: 0.7;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.active-btn{\\r\\n    display: inline-block;\\r\\n    margin-bottom: 40px;\\r\\n    margin-top: 80px;\\r\\n    border: 2px solid #FFFFFF;\\r\\n    background: #0fbcf9 !important;\\r\\n    color: #FFFFFF !important;\\r\\n    min-width: 201px;\\r\\n    min-height: 50px;\\r\\n    border-radius: 8px;\\r\\n    text-transform: uppercase;\\r\\n    font-weight: 500;\\r\\n    transition: .3s linear;\\r\\n}\\r\\n\\r\\nul {\\r\\n    list-style: none;\\r\\n}\\r\\n\\r\\n.empty-plan {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    width: 50%;\\r\\n    height: 50vh;\\r\\n    align-items: center\\r\\n}\\r\\n\\r\\n.plan-des{\\r\\n    min-height: 100px;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","i","MemberPlanForm","props","membershipPlans","fetchMembershipPlans","isLoading","createMembershipPaymentSession","paymentSessionId","fetchAllSettings","allSettings","fetchCurrentPlanDetails","currentPlanDetails","useState","monthly","setMonthly","useDispatch","frequency","getFormattedOptions","membershipPlanFrequencyOptions","navigate","useNavigate","useEffect","setTimeout","planDate","end_date","d1","Date","d2","ProgressBar","className","style","margin","getFormattedMessage","type","id","onChange","e","value","target","checked","onSwitchChange","length","toReversed","map","plan","name","currency","currency_symbol","price","description","onClick","plan_id","disabled","getTime","propTypes","PropTypes","connect","state","MemberPlan","history","dispatch","setLoading","apiConfig","apiBaseURL","then","response","localStorage","setItem","btoa","JSON","stringify","data","message","user","membershipPlanActionType","payload","sessionId","addToast","text","toastType","settingActionType","currentMembershipDetails","planId","___CSS_LOADER_EXPORT___","push","module"],"sourceRoot":""}